stages:
  - docker-build
  - docker-push
  - deploy-staging

variables:
  IMAGE_NAME: "$DOCKER_USERNAME/b07-commitandpray-fe-mobile:latest"
  DOCKER_DRIVER: overlay2
  NEXT_PUBLIC_API_URL: http://localhost:8080/api

docker-build:
  stage: docker-build
  image: docker:24.0.7
  services:
    - docker:24.0.7-dind
  script:
    - cd "$CI_PROJECT_DIR"
    - cd fmoc-mobile-frontend
    - echo "Building Docker Image..."
    - docker build --build-arg  NEXT_PUBLIC_API_URL="$NEXT_PUBLIC_API_URL" -t $IMAGE_NAME . --file Dockerfile 
    - echo "Saving Docker Image..."
    - docker save -o image.tar $IMAGE_NAME
  artifacts:
    paths:
      - fmoc-mobile-frontend/image.tar
    expire_in: 1 day
  rules:
    - when: always

docker-push:
  stage: docker-push
  image: docker:24.0.7
  services:
    - docker:24.0.7-dind
  dependencies:
    - docker-build
  script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker load -i fmoc-mobile-frontend/image.tar
    - docker push $IMAGE_NAME

deploy-staging:
  stage: deploy-staging
  image: alpine:latest
  dependencies:
    - docker-push
  before_script:
    - apk add --no-cache openssh-client docker-cli
    - mkdir -p ~/.ssh
    - printf '%s\n' "$PRIVATE_KEY_STAGING" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H "$DEPLOY_HOST_STAGING" >> ~/.ssh/known_hosts
  script:
    - echo "Logging in to Docker Hub on remote host..."
    - ssh -o StrictHostKeyChecking=no "$DEPLOY_USER_STAGING@$DEPLOY_HOST_STAGING" "echo \"$DOCKER_PASSWORD\" | docker login -u \"$DOCKER_USERNAME\" --password-stdin"
    - echo "Pulling latest image on remote host..."
    - ssh -o StrictHostKeyChecking=no "$DEPLOY_USER_STAGING@$DEPLOY_HOST_STAGING" "docker pull $IMAGE_NAME"
    - echo "Stopping and removing existing container (if any)..."
    - ssh -o StrictHostKeyChecking=no "$DEPLOY_USER_STAGING@$DEPLOY_HOST_STAGING" "docker stop nextjs-app || true && docker rm nextjs-app || true"
    - echo "Starting new container..."
    - ssh -o StrictHostKeyChecking=no "$DEPLOY_USER_STAGING@$DEPLOY_HOST_STAGING" "docker run -d --restart always --name nextjs-app -p 80:80 -p 3000:3000 -e NEXT_PUBLIC_API_URL="$NEXT_PUBLIC_API_URL" $IMAGE_NAME"
    # - ssh -o StrictHostKeyChecking=no "$DEPLOY_USER_STAGING@$DEPLOY_HOST_STAGING" docker run -d --restart always --name b07-commitandpray-be -p 80:80 -e DATABASE_URL_DEV="$DATABASE_URL_DEV" -e DATABASE_URL_PROD="$DATABASE_URL_PROD" -e PROD_USERNAME="$PROD_USERNAME" -e PROD_PASSWORD="$PROD_PASSWORD" -e DEV_USERNAME="$DEV_USERNAME" -e DEV_PASSWORD="$DEV_PASSWORD" -e CLOUD_NAME="$CLOUD_NAME" -e CLOUD_APIKEY="$CLOUD_APIKEY" -e CLOUD_APISECRET="$CLOUD_APISECRET" -e JWT_SECRET_KEY="$JWT_SECRET_KEY" "$IMAGE_NAME"

    # - ssh -o StrictHostKeyChecking=no $STAGING_USER@$STAGING_HOST "docker pull $IMAGE_NAME && docker stop my-app || true && docker rm my-app || true && docker run -d --name my-app -p 8080:8080 $IMAGE_NAME"
  rules:
    - if: '$CI_COMMIT_BRANCH == "staging"'